### YamlMime:FAQ
metadata:
  description: SQL Server システム カタログに対するクエリに関してよく寄せられる質問
  title: SQL Server システムカタログに対するクエリについてよく寄せられる質問 |Microsoft Docs
  ms.custom: ''
  ms.date: 03/14/2017
  ms.prod: sql
  ms.prod_service: database-engine
  ms.reviewer: ''
  ms.technology: system-objects
  ms.topic: reference
  dev_langs:
  - TSQL
  helpviewer_keywords:
  - catalog views [SQL Server], examples
  - metadata [SQL Server], frequently asked questions
  - metadata [SQL Server], example queries
  - system catalogs [SQL Server], example queries
  - catalog views [SQL Server], frequently asked questions
  ms.assetid: ca202580-c37e-4ccd-9275-77ce79481f64
  author: WilliamDAssafMSFT
  ms.author: wiassaf
  ms.openlocfilehash: 7d51c2896bafe8c5ae6e00e58cdcffdf3078fd2a
  ms.sourcegitcommit: 15c7cd187dcff9fc91f2daf0056b12ed3f0403f0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "102467528"
title: SQL Server システム カタログに対するクエリに関してよく寄せられる質問
summary: "[!INCLUDE [SQL Server](../../includes/applies-to-version/sqlserver.md)]\n\n  このトピックには、よく寄せられる質問の一覧が含まれています。 これらの質問に対する答えは、カタログビューに基づくクエリです。  \n  \n"
sections:
- name: 無視
  questions:
  - question: よく寄せられる質問
    answer: "<a name=\"_TOP\"></a> 以下のセクションでは、よく寄せられる質問をカテゴリ別に示します。  \n  \n**データの種類**\n  \n-   [指定されたテーブルの列のデータ型を検索操作方法には、](#_FAQ7)  \n  \n-   [指定されたテーブルの LOB データ型を検索操作方法には](#_FAQ14)  \n  \n-   [指定されたデータ型に依存する列を見つけるにはどのようにすればよいですか。](#_FAQ22)  \n  \n-   [指定された CLR ユーザー定義型または別名データ型に依存する計算列を見つけるにはどのようにすればよいですか。](#_FAQ23)  \n  \n-   [指定された CLR ユーザー定義型または別名型に依存するパラメーターを検索操作方法には](#_FAQ24)  \n  \n-   [指定された CLR ユーザー定義型に依存する CHECK 制約を検索操作方法には、](#_FAQ25)  \n  \n-   [指定された CLR ユーザー定義型または別名データ型に依存するビュー、Transact-SQL 関数、Transact-SQL ストアド プロシージャを見つけるにはどのようにすればよいですか。](#_FAQ26)  \n  \n**テーブル、インデックス、ビュー、および制約** \n  \n-   [指定されたデータベースでユーザー定義型のテーブルをすべて見つけるにはどのようにすればよいですか。](#_FAQ31)  \n  \n-   [指定したデータベース中でクラスター化インデックスを持たないテーブルをすべて見つけるにはどのようにすればよいですか。](#_FAQ1)  \n  \n-   [インデックスを持たないすべてのテーブルを検索操作方法には](#_FAQ4)  \n  \n-   [主キーを持たないすべてのテーブルを見つけるにはどのようにすればよいですか。](#_FAQ3)  \n  \n-   [Id 列を含むすべてのテーブルを検索操作方法には、](#_FAQ5)  \n  \n-   [パーティション分割されたテーブルとインデックスをすべて見つけるにはどのようにすればよいですか。](#_FAQ32)  \n  \n-   [データベース内のすべてのビューを見つけるにはどのようにすればよいですか。](#_FAQ13)  \n  \n-   [ビューの定義を見つけるにはどのようにすればよいですか。](#_FAQ35)  \n  \n-   [過去 n 日間に変更されたすべてのエンティティを見つけるにはどのようにすればよいですか。](#_FAQ6)  \n  \n-   [指定されたテーブルの主キーの列を検索操作方法には、次のようにします。](#_FAQ16)  \n  \n-   [指定されたテーブルの外部キーの列を検索操作方法には](#_FAQ17)  \n  \n-   [計算列の式で使われている列を判断するにはどのようにすればよいですか。](#_FAQ20)  \n  \n-   [計算列の式で使用されているすべての列を検索操作方法には、](#_FAQ21)  \n  \n-   [指定されたテーブルのすべての制約を検索操作方法には](#_FAQ27)  \n  \n-   [指定されたテーブルのインデックスをすべて見つけるにはどのようにすればよいですか。](#_FAQ28)  \n  \n-   [指定された列名を持つすべてのテーブルを検索操作方法には](#_FAQ30)  \n  \n-   [指定されたオブジェクトの統計情報をすべて見つけるにはどのようにすればよいですか。](#_FAQ33)  \n  \n-   [指定されたオブジェクトのすべての統計列と統計列を検索操作方法には](#_FAQ34)  \n  \n**モジュール (ストアド プロシージャ、ユーザー定義関数、およびトリガー)** \n  \n-   [データベース内のすべてのストアドプロシージャを検索操作方法には、](#_FAQ9)  \n  \n-   [データベース内のすべてのユーザー定義関数を検索操作方法には](#_FAQ12)  \n  \n-   [指定されたストアドプロシージャまたは関数のパラメーターを検索操作方法には](#_FAQ10)  \n  \n-   [指定した関数に対する依存関係を知るにはどのようにすればよいですか。](#_FAQ8)  \n  \n-   [モジュールの定義を表示操作方法には](#_FAQ15)  \n  \n-   [サーバー レベルのトリガーの定義を表示するにはどのようにすればよいですか。](#_FAQ19)  \n  \n**スキーマ、ユーザー、ロール、およびアクセス許可**\n  \n-   [指定したスキーマに含まれるエンティティのすべての所有者を検索操作方法には、](#_FAQ2)  \n  \n-   [指定されたプリンシパルに付与または定義された権限を見つけるにはどのようにすればよいですか。](#_FAQ18)  \n  \n"
  - question: 回答
    answer: "<a name=\"_FAQ1\"></a> **指定したデータベース中でクラスター化インデックスを持たないテーブルをすべて見つけるにはどのようにすればよいですか。**\n\n次のクエリを実行する前に、を `<database_name>` 有効なデータベース名に置き換えます。\n  \n```sql  \nSELECT SCHEMA_NAME(t.schema_id) AS schema_name, t.name AS table_name  \nFROM sys.tables AS t  \nWHERE NOT EXISTS   \n   (  \n     SELECT * FROM sys.indexes AS i  \n     WHERE i.object_id = t.object_id  \n     AND i.type = 1  -- or type_desc = 'CLUSTERED'  \n   )  \nORDER BY schema_name, table_name;  \nGO  \n  \n```  \n  \n または、 `OBJECTPROPERTY` 次の例に示すように、関数を使用することもできます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(schema_id) AS schema_name, name AS table_name  \nFROM sys.tables   \nWHERE OBJECTPROPERTY(object_id,'TableHasClustIndex') = 0  \nORDER BY schema_id, name;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ2\"></a>**指定したスキーマに含まれるエンティティのすべての所有者を検索操作方法には、**\n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name>` 有効な名前に置き換えます。\n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT 'OBJECT' AS entity_type  \n    ,USER_NAME(OBJECTPROPERTY(object_id, 'OwnerId')) AS owner_name  \n    ,name   \nFROM sys.objects WHERE SCHEMA_NAME(schema_id) = '<schema_name>'  \nUNION   \nSELECT 'TYPE' AS entity_type  \n    ,USER_NAME(TYPEPROPERTY(SCHEMA_NAME(schema_id) + '.' + name, 'OwnerId')) AS owner_name  \n    ,name   \nFROM sys.types WHERE SCHEMA_NAME(schema_id) = '<schema_name>'   \nUNION  \nSELECT 'XML SCHEMA COLLECTION' AS entity_type   \n    ,COALESCE(USER_NAME(xsc.principal_id),USER_NAME(s.principal_id)) AS owner_name  \n    ,xsc.name   \nFROM sys.xml_schema_collections AS xsc JOIN sys.schemas AS s  \n    ON s.schema_id = xsc.schema_id  \nWHERE s.name = '<schema_name>';  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ3\"></a> **主キーを持たないすべてのテーブルを見つけるにはどのようにすればよいですか。**\n\n次のクエリを実行する前に、を `<database_name>` 有効なデータベース名に置き換えます。\n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(t.schema_id) AS schema_name  \n    ,t.name AS table_name  \nFROM sys.tables t   \nWHERE object_id NOT IN   \n   (  \n    SELECT parent_object_id   \n    FROM sys.key_constraints   \n    WHERE type_desc = 'PRIMARY_KEY_CONSTRAINT' -- or type = 'PK'  \n    );  \nGO  \n  \n```  \n  \n または、次のクエリを実行することもできます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(schema_id) AS schema_name  \n    ,name AS table_name   \nFROM sys.tables   \nWHERE OBJECTPROPERTY(object_id,'TableHasPrimaryKey') = 0  \nORDER BY schema_name, table_name;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ4\"></a>**インデックスを持たないすべてのテーブルを検索操作方法** には\n\n次のクエリを実行する前に、を `<database_name>` 有効なデータベース名に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(schema_id) AS schema_name  \n    ,name AS table_name  \nFROM sys.tables   \nWHERE OBJECTPROPERTY(object_id,'IsIndexed') = 0  \nORDER BY schema_name, table_name;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ5\"></a>**Id 列を含むすべてのテーブルを検索操作方法には、**\n\n次のクエリを実行する前に、を `<database_name>` 有効なデータベース名に置き換えます。\n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(schema_id) AS schema_name  \n    , t.name AS table_name  \n    , c.name AS column_name  \nFROM sys.tables AS t  \nJOIN sys.identity_columns c ON t.object_id = c.object_id  \nORDER BY schema_name, table_name;  \nGO  \n  \n```  \n  \n または、次のクエリを実行することもできます。  \n  \n> [!NOTE]  \n>  このクエリでは、列の名前は返されません。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(schema_id) AS schema_name  \n    ,name AS table_name   \nFROM sys.tables   \nWHERE OBJECTPROPERTY(object_id,'TableHasIdentity') = 1  \nORDER BY schema_name, table_name;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ7\"></a>**指定されたテーブルの列のデータ型を検索操作方法には、** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.table_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT c.name AS column_name  \n    ,c.column_id  \n    ,SCHEMA_NAME(t.schema_id) AS type_schema  \n    ,t.name AS type_name  \n    ,t.is_user_defined  \n    ,t.is_assembly_type  \n    ,c.max_length  \n    ,c.precision  \n    ,c.scale  \nFROM sys.columns AS c   \nJOIN sys.types AS t ON c.user_type_id=t.user_type_id  \nWHERE c.object_id = OBJECT_ID('<schema_name.table_name>')  \nORDER BY c.column_id;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ8\"></a> **指定した関数に対する依存関係を知るにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.function_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) AS referencing_object_name  \n    ,COALESCE(COL_NAME(object_id, column_id), '(n/a)') AS referencing_column_name  \n    ,*  \nFROM sys.sql_dependencies  \nWHERE referenced_major_id = OBJECT_ID('<schema_name.function_name>')  \nORDER BY OBJECT_NAME(object_id), COL_NAME(object_id, column_id);  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ9\"></a>**データベース内のすべてのストアドプロシージャを検索操作方法には、** \n\n次のクエリを実行する前に、を `<database_name>` 有効な名前に置き換えます。  \n  \n```sql  \n  \nUSE <database_name>;  \nGO  \nSELECT name AS procedure_name   \n    ,SCHEMA_NAME(schema_id) AS schema_name  \n    ,type_desc  \n    ,create_date  \n    ,modify_date  \nFROM sys.procedures;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ10\"></a>**指定されたストアドプロシージャまたは関数のパラメーターを検索操作方法には** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.object_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(schema_id) AS schema_name  \n    ,o.name AS object_name  \n    ,o.type_desc  \n    ,p.parameter_id  \n    ,p.name AS parameter_name  \n    ,TYPE_NAME(p.user_type_id) AS parameter_type  \n    ,p.max_length  \n    ,p.precision  \n    ,p.scale  \n    ,p.is_output  \nFROM sys.objects AS o  \nINNER JOIN sys.parameters AS p ON o.object_id = p.object_id  \nWHERE o.object_id = OBJECT_ID('<schema_name.object_name>')  \nORDER BY schema_name, object_name, p.parameter_id;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ12\"></a>**データベース内のすべてのユーザー定義関数を検索操作方法に** は \n\n次のクエリを実行する前に、を `<database_name>` 有効なデータベース名に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT name AS function_name   \n  ,SCHEMA_NAME(schema_id) AS schema_name  \n  ,type_desc  \n  ,create_date  \n  ,modify_date  \nFROM sys.objects  \nWHERE type_desc LIKE '%FUNCTION%';  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ13\"></a> **データベース内のすべてのビューを見つけるにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、を `<database_name>` 有効なデータベース名に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT name AS view_name   \n  ,SCHEMA_NAME(schema_id) AS schema_name  \n  ,OBJECTPROPERTYEX(object_id,'IsIndexed') AS IsIndexed  \n  ,OBJECTPROPERTYEX(object_id,'IsIndexable') AS IsIndexable  \n  ,create_date  \n  ,modify_date  \nFROM sys.views;  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ6\"></a> **過去 n 日間に変更されたすべてのエンティティを見つけるにはどのようにすればよいですか。** \n\n次のクエリの `<database_name>` と `<n_days>` を有効な値に置き換えてから、クエリを実行します。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT name AS object_name   \n  ,SCHEMA_NAME(schema_id) AS schema_name  \n  ,type_desc  \n  ,create_date  \n  ,modify_date  \nFROM sys.objects  \nWHERE modify_date > GETDATE() - <n_days>  \nORDER BY modify_date;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ14\"></a>**指定されたテーブルの LOB データ型を検索操作方法には** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.table_name>` 有効な名前に置き換えます。  \n  \n```sql  \n  \nUSE <database_name>;  \nGO  \nSELECT name AS column_name   \n    ,column_id   \n    ,TYPE_NAME(user_type_id) AS type_name  \n    ,max_length  \n    ,CASE   \n       WHEN max_length = -1 AND TYPE_NAME(user_type_id) <> 'xml'  \n            THEN 1  \n            ELSE 0  \n     END AS [(max)]  \nFROM sys.columns  \nWHERE object_id=OBJECT_ID('<schema_name.table_name>')   \n    AND ( TYPE_NAME(user_type_id) IN ('xml','text', 'ntext','image')  \n         OR (TYPE_NAME(user_type_id) IN ('varchar','nvarchar','varbinary')  \n         AND max_length = -1)  \n        );  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ15\"></a>**モジュールの定義を表示操作方法には** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.object_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT definition  \nFROM sys.sql_modules  \nWHERE object_id = OBJECT_ID('<schema_name.object_name>');  \nGO  \n  \n```  \n  \n または、 `OBJECT_DEFINITION` 次の例に示すように、関数を使用することもできます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_DEFINITION (OBJECT_ID('<schema_name.object_name>')) AS ObjectDefinition;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ19\"></a> **サーバー レベルのトリガーの定義を表示するにはどのようにすればよいですか。** \n  \n```sql  \nSELECT definition  \nFROM sys.server_sql_modules;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ16\"></a>**指定されたテーブルの主キーの列を検索操作方法には、次のようにします。** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.table_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT i.name AS index_name  \n    ,ic.index_column_id  \n    ,key_ordinal  \n    ,c.name AS column_name  \n    ,TYPE_NAME(c.user_type_id)AS column_type   \n    ,is_identity  \nFROM sys.indexes AS i  \nINNER JOIN sys.index_columns AS ic   \n    ON i.object_id = ic.object_id AND i.index_id = ic.index_id  \nINNER JOIN sys.columns AS c   \n    ON ic.object_id = c.object_id AND c.column_id = ic.column_id  \nWHERE i.is_primary_key = 1   \n    AND i.object_id = OBJECT_ID('<schema_name.table_name>');  \nGO  \n  \n```  \n  \n または、 `COL_NAME` 次の例に示すように、関数を使用することもできます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT i.name AS index_name  \n    ,COL_NAME(ic.object_id,ic.column_id) AS column_name  \n    ,ic.index_column_id  \n    ,key_ordinal  \nFROM sys.indexes AS i  \nINNER JOIN sys.index_columns AS ic   \n    ON i.object_id = ic.object_id AND i.index_id = ic.index_id  \nWHERE i.is_primary_key = 1   \n    AND i.object_id = OBJECT_ID('<schema_name.table_name>');  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ17\"></a>**指定されたテーブルの外部キーの列を検索操作方法に** は \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.table_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT   \n    f.name AS foreign_key_name  \n   ,OBJECT_NAME(f.parent_object_id) AS table_name  \n   ,COL_NAME(fc.parent_object_id, fc.parent_column_id) AS constraint_column_name  \n   ,OBJECT_NAME (f.referenced_object_id) AS referenced_object  \n   ,COL_NAME(fc.referenced_object_id, fc.referenced_column_id) AS referenced_column_name  \n   ,is_disabled  \n   ,delete_referential_action_desc  \n   ,update_referential_action_desc  \nFROM sys.foreign_keys AS f  \nINNER JOIN sys.foreign_key_columns AS fc   \n   ON f.object_id = fc.constraint_object_id   \nWHERE f.parent_object_id = OBJECT_ID('<schema_name.table_name>');  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ18\"></a> **指定されたプリンシパルに付与または定義された権限を見つけるにはどのようにすればよいですか。** 次の例では、アクセス許可がチェックされるエンティティの名前を返す関数を作成します。 関数は、次のクエリで呼び出されます。 この関数は権限を確認する各データベースに作成する必要があります。  \n  \n```sql  \n-- Create a function to return the name of the entity on which the permissions are checked.  \nIF OBJECT_ID (N'dbo.entity_instance_name', N'FN') IS NOT NULL  \n    DROP FUNCTION dbo.entity_instance_name;  \nGO  \nCREATE FUNCTION dbo.entity_instance_name(@class_desc nvarchar(60), @major_id int)   \nRETURNS sysname AS  \nBEGIN  \n    DECLARE @the_entity_name sysname  \n    SELECT @the_entity_name = CASE  \n        WHEN @class_desc = 'DATABASE' THEN DB_NAME()  \n        WHEN @class_desc = 'SCHEMA' THEN SCHEMA_NAME(@major_id)  \n        WHEN @class_desc = 'OBJECT_OR_COLUMN' THEN OBJECT_NAME(@major_id)  \n        WHEN @class_desc = 'DATABASE_PRINCIPAL' THEN USER_NAME(@major_id)  \n        WHEN @class_desc = 'ASSEMBLY' THEN   \n            (SELECT name FROM sys.assemblies WHERE assembly_id=@major_id)  \n        WHEN @class_desc = 'TYPE' THEN TYPE_NAME(@major_id)  \n        WHEN @class_desc = 'XML_SCHEMA_COLLECTION' THEN   \n            (SELECT name FROM sys.xml_schema_collections  \n              WHERE xml_collection_id=@major_id)  \n        WHEN @class_desc = 'MESSAGE_TYPE' THEN   \n            (SELECT name FROM sys.service_message_types WHERE message_type_id=@major_id)  \n        WHEN @class_desc = 'SERVICE_CONTRACT' THEN   \n           (SELECT name FROM sys.service_contracts  \n              WHERE service_contract_id=@major_id)  \n        WHEN @class_desc = 'SERVICE' THEN  \n          (SELECT name FROM sys.services WHERE service_id=@major_id)  \n        WHEN @class_desc = 'REMOTE_SERVICE_BINDING' THEN  \n          (SELECT name FROM sys.remote_service_bindings  \n             WHERE remote_service_binding_id=@major_id)  \n        WHEN @class_desc = 'ROUTE' THEN  \n          (SELECT name FROM sys.routes WHERE route_id=@major_id)  \n        WHEN @class_desc = 'FULLTEXT_CATALOG' THEN  \n          (SELECT name FROM sys.fulltext_catalogs WHERE fulltext_catalog_id=@major_id)  \n        WHEN @class_desc = 'SYMMETRIC_KEY' THEN  \n          (SELECT name FROM sys.symmetric_keys WHERE symmetric_key_id=@major_id)  \n        WHEN @class_desc = 'CERTIFICATE' THEN  \n          (SELECT name FROM sys.certificates WHERE certificate_id=@major_id)  \n        WHEN @class_desc = 'ASYMMETRIC_KEY' THEN  \n          (SELECT name FROM sys.asymmetric_keys WHERE asymmetric_key_id=@major_id)  \n        WHEN @class_desc = 'SERVER' THEN   \n             (SELECT name FROM sys.servers WHERE server_id=@major_id)  \n        WHEN @class_desc = 'SERVER_PRINCIPAL' THEN SUSER_NAME(@major_id)  \n        WHEN @class_desc = 'ENDPOINT' THEN   \n             (SELECT name FROM sys.endpoints WHERE endpoint_id=@major_id)        \n        ELSE '?'  \n    END  \n    RETURN @the_entity_name  \nEND;  \nGO  \n-- Return server-level permissions for the user.  \nSELECT class  \n    ,class_desc  \n    ,dbo.entity_instance_name(class_desc, major_id) AS entity_name   \n    ,minor_id  \n    ,SUSER_NAME(grantee_principal_id) AS grantee  \n    ,SUSER_NAME(grantor_principal_id) AS grantor  \n    ,type  \n    ,permission_name  \n    ,state_desc   \nFROM sys.server_permissions   \nWHERE grantee_principal_id = SUSER_ID('public');  \nGO  \n-- Return database-level permissions for the user.  \nSELECT class  \n    ,class_desc  \n    ,dbo.entity_instance_name(class_desc , major_id) AS entity_name   \n    ,minor_id  \n    ,USER_NAME(grantee_principal_id) AS grantee  \n    ,USER_NAME(grantor_principal_id) AS grantor  \n    ,type  \n    ,permission_name  \n    ,state_desc     \nFROM  sys.database_permissions   \nWHERE grantee_principal_id = DATABASE_PRINCIPAL_ID('public');  \nGO  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ20\"></a> **計算列の式で使われている列を判断するにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、、、 `<database_name>` `<schema_name.table_name>` および `<column_name`> を有効な名前に置き換えてください。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) AS object_name  \n    ,COL_NAME(object_id, column_id) AS computed_column   \n    ,class_desc  \n    ,is_selected  \n    ,is_updated  \n    ,is_select_all  \nFROM sys.sql_dependencies  \nWHERE referenced_major_id = OBJECT_ID('<schema_name.table_name>')  \n    AND referenced_minor_id = COLUMNPROPERTY(referenced_major_id, '<column_name>', 'ColumnId')  \n    AND class = 1;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ21\"></a>**計算列の式で使用されているすべての列を検索操作方法には、** \n\n次のクエリを実行する前に、を `<database_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(d.referenced_major_id) AS object_name  \n    ,COL_NAME(d.referenced_major_id, d.referenced_minor_id) AS column_name  \n    ,OBJECT_NAME(referenced_major_id) AS dependent_object_name   \n    ,COL_NAME(d.object_id, d.column_id) AS dependent_computed_column  \n    ,cc.definition AS computed_column_definition  \nFROM sys.sql_dependencies AS d  \nJOIN sys.computed_columns AS cc   \n    ON cc.object_id = d.object_id AND cc.column_id = d.column_id AND d.object_id=d.referenced_major_id       \nWHERE d.class = 1  \nORDER BY object_name, column_name;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ22\"></a> **指定された CLR ユーザー定義型または別名型に依存する列を見つけるにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、を有効な名前に置き換え、を `<database_name>` `<schema_name.data_type_name>` スキーマ修飾の CLR ユーザー定義型またはスキーマ修飾された別名型の名前に置き換えます。 次のクエリでは、 **db_owner** ロールのメンバーシップ、またはデータベース内のすべての依存列および計算列のメタデータを表示する権限が必要です。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) AS object_name   \n    ,c.name AS column_name   \n    ,SCHEMA_NAME(t.schema_id) AS schema_name  \n    ,TYPE_NAME(c.user_type_id) AS user_type_name  \n    ,c.max_length  \n    ,c.precision  \n    ,c.scale  \n    ,c.is_nullable  \n    ,c.is_computed  \nFROM sys.columns AS c  \nINNER JOIN sys.types AS t ON c.user_type_id = t.user_type_id  \nWHERE c.user_type_id = TYPE_ID('<schema_name.data_type_name>');   \nGO  \n  \n```  \n  \n 次のクエリは、CLR ユーザー定義型または別名に依存する列の制限されたビューを返しますが、結果セットは **public** ロールで参照できます。 このクエリは、ユーザー定義型に対する参照権限を他のユーザーに許可していて、その型を使用する他のユーザーが作成したオブジェクトのメタデータを表示する権限がない場合に使用できます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) AS object_name   \n    ,COL_NAME(object_id, column_id) AS column_name  \n    ,TYPE_NAME(user_type_id) AS user_type  \nFROM sys.column_type_usages  \nWHERE user_type_id = TYPE_ID('<schema_name.data_type_name>');  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ23\"></a> **指定された CLR ユーザー定義型または別名型に依存する計算列を見つけるにはどのようにすればよいですか。** \n\n次のクエリの `<database_name>` を有効な名前に置き換え、`<schema_name.data_type_name>` をスキーマ修飾の CLR ユーザー定義型または別名型の有効な名前に置き換えてから、クエリを実行します。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) AS object_name  \n    ,COL_NAME(object_id, column_id) AS column_name  \nFROM sys.sql_dependencies  \nWHERE referenced_major_id = TYPE_ID('<schema_name.data_type_name>')  \n    AND class = 2 -- schema-bound references to type  \n    AND OBJECTPROPERTY(object_id, 'IsTable') = 1;   -- exclude non-table dependencies  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ24\"></a>**指定された CLR ユーザー定義型または別名型に依存するパラメーターを検索操作方法には** \n\n次のクエリの `<database_name>` を有効な名前に置き換え、`<schema_name.data_type_name>` をスキーマ修飾の CLR ユーザー定義型または別名型の有効な名前に置き換えてから、クエリを実行します。 次のクエリでは、 **db_owner** ロールのメンバーシップ、またはデータベース内のすべての依存列および計算列のメタデータを表示する権限が必要です。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) AS object_name  \n    ,NULL AS procedure_number  \n    ,name AS param_name  \n    ,parameter_id AS param_num  \n    ,TYPE_NAME(p.user_TYPE_ID) AS type_name  \nFROM sys.parameters AS p  \nWHERE p.user_TYPE_ID = TYPE_ID('<schema_name.data_type_name>')  \nUNION   \nSELECT OBJECT_NAME(object_id) AS object_name  \n    ,procedure_number  \n    ,name AS param_name  \n    ,parameter_id AS param_num  \n    ,TYPE_NAME(p.user_TYPE_ID) AS type_name  \nFROM sys.numbered_procedure_parameters AS p  \nWHERE p.user_TYPE_ID = TYPE_ID('<schema_name.data_type_name>')  \nORDER BY object_name, procedure_number, param_num;  \nGO  \n  \n```  \n  \n 次のクエリは、CLR ユーザー定義型または別名に依存するパラメーターの制限されたビューを返しますが、結果セットは **public** ロールから参照できます。 このクエリは、ユーザー定義型に対する参照権限を他のユーザーに許可していて、その型を使用する他のユーザーが作成したオブジェクトのメタデータを表示する権限がない場合に使用できます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) AS object_name  \n    ,parameter_id  \n    ,TYPE_NAME(user_type_id) AS type_name  \nFROM sys.parameter_type_usages   \nWHERE user_type_id = TYPE_ID('<schema_name.data_type_name>');  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ25\"></a>**指定された CLR ユーザー定義型に依存する CHECK 制約を検索操作方法** には、 \n\n次のクエリを実行する前に、を有効な名前に置き換え、を `<database_name>` `<schema_name.data_type_name>` スキーマ修飾の CLR ユーザー定義型の有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(o.schema_id) AS schema_name  \n    ,OBJECT_NAME(o.parent_object_id) AS table_name  \n    ,OBJECT_NAME(o.object_id) AS constraint_name  \nFROM sys.sql_dependencies AS d  \nJOIN sys.objects AS o ON o.object_id = d.object_id  \nWHERE referenced_major_id = TYPE_ID('<schema_name.data_type_name>')  \n    AND class = 2 -- schema-bound references to type  \n    AND OBJECTPROPERTY(o.object_id, 'IsCheckCnst') = 1; -- exclude non-CHECK dependencies  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ26\"></a> **指定された CLR ユーザー定義型または別名データ型に依存するビュー、Transact-SQL 関数、Transact-SQL ストアド プロシージャを見つけるにはどのようにすればよいですか。** \n\n次のクエリの `<database_name>` を有効な名前に置き換え、`<schema_name.data_type_name>` をスキーマ修飾の CLR ユーザー定義型または別名型の有効な名前に置き換えてから、クエリを実行します。  \n  \n 関数またはプロシージャで定義されているパラメーターは、暗黙的にスキーマにバインドされます。 したがって、CLR ユーザー定義型または別名型に依存するパラメーターは、 [sys.sql_dependencies](../../relational-databases/system-catalog-views/sys-sql-dependencies-transact-sql.md) カタログビューを使用して表示できます。 プロシージャとトリガーはスキーマバインドされていません。 つまり、プロシージャやトリガーの本体で定義されている式と、CLR ユーザー定義型または別名型の間の依存関係は保守されません。 CLR ユーザー定義型または別名型に依存する式を持つスキーマバインドビューおよびスキーマバインドユーザー定義関数は、 **sys.sql_dependencies** カタログビューで保持されます。 型と CLR 関数と CLR プロシージャの間の依存関係は保持されません。  \n  \n 次のクエリは、指定された CLR ユーザー定義型または別名型に関して、ビュー、[!INCLUDE[tsql](../../includes/tsql-md.md)] 関数、および [!INCLUDE[tsql](../../includes/tsql-md.md)] ストアド プロシージャ内でスキーマにバインドされた依存関係をすべて返します。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(o.schema_id) AS dependent_object_schema  \n  ,OBJECT_NAME(o.object_id) AS dependent_object_name  \n  ,o.type_desc AS dependent_object_type  \n  ,d.class_desc AS kind_of_dependency  \n  ,TYPE_NAME (d.referenced_major_id) AS type_name  \nFROM sys.sql_dependencies AS d   \nJOIN sys.objects AS o  \n  ON d.object_id = o.object_id  \n  AND o.type IN ('FN','IF','TF', 'V', 'P')  \nWHERE d.class = 2 -- dependencies on types  \n  AND d.referenced_major_id = TYPE_ID('<schema_name.data_type_name>')  \nORDER BY dependent_object_schema, dependent_object_name;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ27\"></a>**指定されたテーブルのすべての制約を検索操作方法に** は \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.table_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id) as constraint_name  \n    ,SCHEMA_NAME(schema_id) AS schema_name  \n    ,OBJECT_NAME(parent_object_id) AS table_name  \n    ,type_desc  \n    ,create_date  \n    ,modify_date  \n    ,is_ms_shipped  \n    ,is_published  \n    ,is_schema_published  \nFROM sys.objects  \nWHERE type_desc LIKE '%CONSTRAINT'   \n    AND parent_object_id = OBJECT_ID('<schema_name.table_name>');  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ28\"></a> **指定されたテーブルのインデックスをすべて見つけるにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.table_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT i.name AS index_name  \n    ,i.type_desc  \n    ,is_unique  \n    ,ds.type_desc AS filegroup_or_partition_scheme  \n    ,ds.name AS filegroup_or_partition_scheme_name  \n    ,ignore_dup_key  \n    ,is_primary_key  \n    ,is_unique_constraint  \n    ,fill_factor  \n    ,is_padded  \n    ,is_disabled  \n    ,allow_row_locks  \n    ,allow_page_locks  \nFROM sys.indexes AS i  \nINNER JOIN sys.data_spaces AS ds ON i.data_space_id = ds.data_space_id  \nWHERE is_hypothetical = 0 AND i.index_id <> 0   \nAND i.object_id = OBJECT_ID('<schema_name.table_name>');  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ30\"></a>**指定された列名を持つすべてのオブジェクトを検索操作方法** には \n\n次のクエリを実行する前に、 `<database_name>` とを `<column_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_NAME(object_id)  \nFROM sys.columns  \nWHERE name = '<column_name>';  \nGO  \n  \n```  \n  \n または  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(o.schema_id) AS schema_name   \n    ,o.name AS object_name  \n    ,type_desc  \nFROM sys.objects AS o  \nINNER JOIN sys.columns AS c ON o.object_id = c.object_id  \nWHERE c.name = '<column_name>';  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ31\"></a> **指定されたデータベースでユーザー定義型のテーブルをすべて見つけるにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、を `<database_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT *   \nFROM sys.tables;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ32\"></a> **パーティション分割されたテーブルとインデックスをすべて見つけるにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、を `<database_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT SCHEMA_NAME(o.schema_id) AS schema_name  \n    ,OBJECT_NAME(p.object_id) AS table_name  \n    ,i.name AS index_name  \n    ,p.partition_number  \n    ,rows   \nFROM sys.partitions AS p  \nINNER JOIN sys.indexes AS i ON p.object_id = i.object_id AND p.index_id = i.index_id  \nINNER JOIN sys.partition_schemes ps ON i.data_space_id=ps.data_space_id  \nINNER JOIN sys.objects AS o ON o.object_id = i.object_id  \nORDER BY index_name, partition_number;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ33\"></a> **指定されたオブジェクトの統計情報をすべて見つけるにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、を有効な名前に置き換え、を `<database_name>` `<schema_name.object_name>` 有効なテーブル、インデックス付きビュー、またはテーブル値関数の名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT name AS statistics_name  \n    ,stats_id  \n    ,auto_created  \n    ,user_created  \n    ,no_recompute  \nFROM sys.stats  \nWHERE object_id = OBJECT_ID('<schema_name.object_name>');  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ34\"></a>**指定されたオブジェクトのすべての統計列と統計列を検索操作方法には** \n\n次のクエリを実行する前に、を有効な名前に置き換え、を `<database_name>` `<schema_name.object_name>` 有効なテーブル、インデックス付きビュー、またはテーブル値関数の名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT s.name AS statistics_name  \n    ,c.name AS column_name  \n    ,sc.stats_column_id  \nFROM sys.stats AS s  \nINNER JOIN sys.stats_columns AS sc   \n    ON s.object_id = sc.object_id AND s.stats_id = sc.stats_id  \nINNER JOIN sys.columns AS c   \n    ON sc.object_id = c.object_id AND c.column_id = sc.column_id  \nWHERE s.object_id = OBJECT_ID('<schema_name.object_name>');  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n<a name=\"_FAQ35\"></a> **ビューの定義を見つけるにはどのようにすればよいですか。** \n\n次のクエリを実行する前に、 `<database_name>` とを `<schema_name.object_name>` 有効な名前に置き換えます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT definition  \nFROM sys.sql_modules  \nWHERE object_id = OBJECT_ID('<schema_name.object_name>');  \nGO  \n  \n```  \n  \n または、 `OBJECT_DEFINITION` 次の例に示すように、関数を使用することもできます。  \n  \n```sql  \nUSE <database_name>;  \nGO  \nSELECT OBJECT_DEFINITION (OBJECT_ID('<schema_name.object_name>')) AS ObjectDefinition;  \nGO  \n  \n```  \n  \n [TOP](#_TOP)  \n  \n"
  - question: 参照
    answer: '[システムビューへのシステムテーブルのマッピング (Transact-sql)](../../relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql.md)'
